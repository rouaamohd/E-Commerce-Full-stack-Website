// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model Category {
  id    Int    @id @default(autoincrement())
  name  String
  image String
  items Item[]
}

model Artist {
  id          Int     @id @default(autoincrement())
  username    String  @unique
  password    String
  name        String
  balance     Float
  isLoggedIn  Boolean @default(false)
  itemsOnSale Item[]
}

model Customer {
  id           Int           @id @default(autoincrement())
  username     String        @unique
  password     String
  balance      Float
  isLoggedIn   Boolean       @default(false)
  name         String
  transactions Transaction[]
}

model Admin {
  id           Int           @id @default(autoincrement())
  username     String        @unique
  password     String
  isLoggedIn   Boolean       @default(false)
  name         String
}

model Item {
  id                 Int           @id @default(autoincrement())
  title              String
  price              Float
  currency           String
  description        String
  image_url          String
  available_quantity Int
  quantity_to_buy    Int           @default(0)
  Transaction        Transaction[]
  Category           Category      @relation(fields: [categoryId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  categoryId         Int
  Artist             Artist        @relation(fields: [artistID], references: [id], onDelete: Cascade, onUpdate: Cascade)
  artistID           Int
}

model Transaction {
  id         Int      @id @default(autoincrement())
  userId     Int
  itemId     Int?
  date       DateTime @default(now())
  quantity   Int
  totalPrice Float
  location   String
  customer   Customer @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  artwork    Item?    @relation(fields: [itemId], references: [id], onUpdate: Cascade, onDelete: SetNull)
}
